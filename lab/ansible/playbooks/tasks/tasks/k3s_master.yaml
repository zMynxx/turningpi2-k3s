- name: Check for k3s command
  command: command -v k3s >/dev/null 2>&1
  register: installed
  no_log: false
  ignore_errors: yes

- name: Fetch k3s installation script
  ansible.builtin.uri: 
    url: https://get.k3sup.dev
    dest: /tmp/install.sh
    mode: 'u+rwx'
  when: installed.rc != 0
  register: download

- name: Check for k3s command
  command: command -v k3s >/dev/null 2>&1
  register: installed
  no_log: false
  ignore_errors: yes

- name: Fetch k3s installation script
  ansible.builtin.uri: 
    url: https://get.k3sup.dev
    dest: /tmp/install.sh
    mode: 'u+rwx'
  when: installed.rc != 0
  register: download

- name: Find master's public ip
  ansible.builtin.uri:
    url: http://ifconfig.me/ip
    return_content: yes
  register: response

# - name: Installing Zsh
#   become: true
#   ansible.builtin.apt: 
#     name: zsh
#     state: latest
#
# - name: Execute the k3s install script
#   become: true
#   shell: /tmp/install.sh \
#     --write-kubeconfig-mode 644 \
#     --disable servicelb \
#     --token "{{ k3s_token }}" \
#     --node-ip "{{ response.content }}" \
#     --disable-cloud-controller \
#     --disable local-storage
#   when: download.changed
#
# - name: Remove the install.sh
#   file: 
#     path: /tmp/install.sh 
#     state: absent

# - name: Run k3s installer on the master node
#   ansible.builtin.shell:
#     cmd: sh -s \
#       --write-kubeconfig-mode 644 \
#       --disable servicelb \
#       --token "{{ k3s_token }}" \
#       --node-ip "{{ response.content }}" \
#       --disable-cloud-controller \
#       --disable local-storage
#     stdin: "{{ k3s_installer.content }}"

# - name: Label a master node
#   ansible.builtin.shell:
#     cmd: kubectl label nodes {{ hostname }} kubernetes.io/role=master &&\
#       kubectl label nodes cube01 node-type=master
